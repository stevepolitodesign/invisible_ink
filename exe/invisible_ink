#!/usr/bin/env ruby
require_relative "../lib/invisible_ink"

command = ARGV.shift

case command
when "write"
  file_path = ARGV.shift
  if file_path.nil?
    puts "ERROR: FILE_PATH argument is required"
    exit 1
  end
when "read"
  file_path = ARGV.shift
  if file_path.nil?
    puts "ERROR: FILE_PATH argument is required"
    exit 1
  end
  encrypted_file = ActiveSupport::EncryptedFile.new(
    content_path: file_path,
    key_path: "invisible_ink.key",
    env_key: "",
    raise_if_missing_key: true
  )
  puts encrypted_file.read
when "setup"
  if File.exist?("invisible_ink.key")
    puts "ERROR: invisible_ink.key already exists"
    exit 1
  else
    ignore_key = if File.exist?(".gitignore") && !File.read(".gitignore").empty?
      "\ninvisible_ink.key"
    else
      "invisible_ink.key"
    end
    File.open(".gitignore", "a") { |file| file.puts(ignore_key) }
    key = SecureRandom.hex(16)
    File.write("invisible_ink.key", key)
  end
else
  puts "ERROR: Unknown command #{command}"
  exit 1
end
